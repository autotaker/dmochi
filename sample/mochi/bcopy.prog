let make_array : [int] -> int = fun n -> n;;
let arraysize : [int] -> int = fun src -> src;;
let update : [int, int, int] -> int =
    fun des i x -> 
        if 0 <= i && i < des then 0 else Fail;;
 let sub : [int, int] -> int =
    fun src i ->
        if 0 <= i && i < src then 0 else Fail;;
 
 let bcopy_aux : [int, int, int, int] -> int =
    fun src des i m ->
        if i >= m then 0
        else
            let v = sub src i in
            let tmp = update des i v in
            let r = bcopy_aux src des (i + 1) m in
            r;;

let bcopy : [int, int] -> int= 
    fun src des -> 
        let l = arraysize src in
        let r = bcopy_aux src des 0 l in
        r;;

let n = * in
let m = * in
let array1 = make_array n in
let array2 = make_array m in
assume n <= m;
let r = bcopy array1 array2 in
r;;
    
