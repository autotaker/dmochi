
let max : m:int -> 
          f:(j:int -> int[r.r < m]) -> 
          n:int -> 
          i:int -> 
          acc:int[acc.acc < m] -> int[r.r < m] =
  fun m -> fun f -> fun n -> fun i -> fun acc ->
    (assume (i >= n); acc) <>
    (assume (i < n); 
      let x = f i in
      let acc1 = max2 acc x in
      let r = max m f n (i+1) acc1 in r);;

let max2 : x:int -> y:int -> int[r.r = x; r.r = y; r.r >= x; r.r >= y] =
  fun x -> fun y -> 
    (assume (x > y); x) <> (assume (not (x > y)); y);;

let gen : m:int -> j:int -> int[r.r < m] =
  fun m -> fun j ->
    let v = rand_int 0 in assume (v < m); v;;

let rand_int : x:int -> int = fun x -> 0;;

let m = rand_int 0 in
let n = rand_int 0 in
let f = gen m in
let v = f 0 in
let r = max m f n 0 v in
assume (r >= m); Fail
