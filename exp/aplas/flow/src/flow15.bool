let bnot : [Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool] -> [Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool] =
  fun (x : [Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool] ) -> 
    (15 (not x.(0/15)) (not x.(1/15)) (not x.(2/15)) (not x.(3/15)) (not x.(4/15)) (not x.(5/15)) (not x.(6/15)) (not x.(7/15)) (not x.(8/15)) (not x.(9/15)) (not x.(10/15)) (not x.(11/15)) (not x.(12/15)) (not x.(13/15)) (not x.(14/15)));;
let eq : Bool -> Bool -> Bool = 
  fun (x : Bool) -> fun (y : Bool) -> 
    x && y || (not x && not y) in

let x : [Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool] = 
    (15 (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false) (true <> false)) in
let y : [Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool,Bool] = bnot x in

assume x.(0/15) || not x.(0/15);
assume x.(1/15) || not x.(1/15);
assume x.(2/15) || not x.(2/15);
assume x.(3/15) || not x.(3/15);
assume x.(4/15) || not x.(4/15);
assume x.(5/15) || not x.(5/15);
assume x.(6/15) || not x.(6/15);
assume x.(7/15) || not x.(7/15);
assume x.(8/15) || not x.(8/15);
assume x.(9/15) || not x.(9/15);
assume x.(10/15) || not x.(10/15);
assume x.(11/15) || not x.(11/15);
assume x.(12/15) || not x.(12/15);
assume x.(13/15) || not x.(13/15);
assume x.(14/15) || not x.(14/15);
assume eq x.(0/15) y.(0/15) || 
       eq x.(1/15) y.(1/15) || 
       eq x.(2/15) y.(2/15) || 
       eq x.(3/15) y.(3/15) || 
       eq x.(4/15) y.(4/15) || 
       eq x.(5/15) y.(5/15) || 
       eq x.(6/15) y.(6/15) || 
       eq x.(7/15) y.(7/15) || 
       eq x.(8/15) y.(8/15) || 
       eq x.(9/15) y.(9/15) || 
       eq x.(10/15) y.(10/15) || 
       eq x.(11/15) y.(11/15) || 
       eq x.(12/15) y.(12/15) || 
       eq x.(13/15) y.(13/15) || 
       eq x.(14/15) y.(14/15);
fail([]);;
