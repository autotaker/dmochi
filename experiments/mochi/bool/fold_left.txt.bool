let head_0 : [[], [] -> [Bool]] -> [Bool] =
    fun (p_11 : [[], [] -> [Bool]]) ->
        let f_12 : [] -> [Bool] =
            p_11.(1/2) in
        let z_13 : [Bool] =
            f_12 (0) in
        let int_79 : Bool =
            (assume z_13.(0/1);
             true) <>
            (assume not z_13.(0/1);
             false) in
        (1 int_79);;
let tail_1 : [[], [] -> [Bool]] -> [[], [] -> [Bool]] =
    fun (p_21 : [[], [] -> [Bool]]) ->
        let f_23 : [] -> [Bool] =
            p_21.(1/2) in
        let g_28 : [] -> [Bool] =
            fun (j_26 : []) ->
                let v_27 : [Bool] =
                    f_23 (0) in
                let int_80 : Bool =
                    (assume v_27.(0/1);
                     true) <>
                    (assume not v_27.(0/1);
                     false) in
                (1 int_80) in
        let x_81 : [] =
            (0) in
        let y_82 : [] -> [Bool] =
            fun (x_83 : []) ->
                let y_84 : [] =
                    (0) in
                let z_85 : [Bool] =
                    g_28 y_84 in
                let int_86 : Bool =
                    (assume z_85.(0/1);
                     true) <>
                    (assume not z_85.(0/1);
                     false) in
                (1 int_86) in
        (2 x_81 y_82);;
let fold_left_2 : ([] -> [Bool] -> [Bool]) -> [] -> [[], [] -> [Bool]] -> [Bool, Bool] =
    fun (f_41 : [] -> [Bool] -> [Bool]) ->
        fun (acc_42 : []) ->
            fun (xs_43 : [[], [] -> [Bool]]) ->
                (assume true <>
                        false;
                 let int_87 : Bool =
                     false in
                 let int_88 : Bool =
                     assume not int_87;
                     true in
                 (2 int_87 int_88)) <>
                (assume true <>
                        false;
                 let xs1_44 : [[], [] -> [Bool]] =
                     tail_1 (let x_89 : [] =
                                 (0) in
                             let y_90 : [] -> [Bool] =
                                 fun (x_91 : []) ->
                                     let y_92 : [] =
                                         (0) in
                                     let z_93 : [Bool] =
                                         xs_43.(1/2) y_92 in
                                     let int_94 : Bool =
                                         (assume z_93.(0/1);
                                          true) <>
                                         (assume not z_93.(0/1);
                                          false) in
                                     (1 int_94) in
                             (2 x_89 y_90)) in
                 let x_45 : [Bool] =
                     head_0 (let x_95 : [] =
                                 (0) in
                             let y_96 : [] -> [Bool] =
                                 fun (x_97 : []) ->
                                     let y_98 : [] =
                                         (0) in
                                     let z_99 : [Bool] =
                                         xs_43.(1/2) y_98 in
                                     let int_100 : Bool =
                                         (assume z_99.(0/1);
                                          true) <>
                                         (assume not z_99.(0/1);
                                          false) in
                                     (1 int_100) in
                             (2 x_95 y_96)) in
                 let acc1_46 : [Bool] =
                     f_41 (0) (let int_101 : Bool =
                                   (assume x_45.(0/1);
                                    true) <>
                                   (assume not x_45.(0/1);
                                    false) in
                               (1 int_101)) in
                 let r_47 : [Bool, Bool] =
                     fold_left_2 f_41 (0) (let x_102 : [] =
                                               (0) in
                                           let y_103 : [] -> [Bool] =
                                               fun (x_104 : []) ->
                                                   let y_105 : [] =
                                                       (0) in
                                                   let z_106 : [Bool] =
                                                       xs1_44.(1/2) y_105 in
                                                   let int_107 : Bool =
                                                       (assume z_106.(0/1);
                                                        true) <>
                                                       (assume not z_106.(0/1);
                                                        false) in
                                                   (1 int_107) in
                                           (2 x_102 y_103)) in
                 let int_108 : Bool =
                     true <>
                     (assume not (acc1_46.(0/1) && r_47.(0/2)) && not (acc1_46.(0/1) && r_47.(1/2));
                      false) in
                 let int_109 : Bool =
                     true <>
                     (assume not int_108 && not (acc1_46.(0/1) && r_47.(0/2)) && not (acc1_46.(0/1) && r_47.(1/2));
                      false) in
                 (2 int_108 int_109));;
let make_list_3 : [] -> [[Bool, Bool], [] -> [Bool]] =
    fun (n_54 : []) ->
        (assume true <>
                false;
         let f_58 : [] -> [Bool] =
             fun (j_57 : []) ->
                 assume false;
                 let int_110 : Bool =
                     assume false;
                     false in
                 (1 int_110) in
         let x_111 : [Bool, Bool] =
             let int_112 : Bool =
                 true in
             let int_113 : Bool =
                 assume int_112;
                 false in
             (2 int_112 int_113) in
         let y_114 : [] -> [Bool] =
             fun (x_115 : []) ->
                 let y_116 : [] =
                     (0) in
                 let z_117 : [Bool] =
                     f_58 y_116 in
                 let int_118 : Bool =
                     (assume x_111.(0/2) && not x_111.(1/2) && z_117.(0/1);
                      true) <>
                     (assume x_111.(0/2) && not x_111.(1/2) && not z_117.(0/1);
                      false) in
                 (1 int_118) in
         (2 x_111 y_114)) <>
        (assume true <>
                false;
         let p1_59 : [[Bool, Bool], [] -> [Bool]] =
             make_list_3 (0) in
         let f_61 : [] -> [Bool] =
             p1_59.(1/2) in
         let g_66 : [] -> [Bool] =
             fun (j_64 : []) ->
                 (assume true <>
                         false;
                  let int_119 : Bool =
                      (assume p1_59.(0/2).(0/2);
                       true) <>
                      (assume not p1_59.(0/2).(0/2) && not p1_59.(0/2).(1/2);
                       false) in
                  (1 int_119)) <>
                 (assume true <>
                         false;
                  let z_65 : [Bool] =
                      f_61 (0) in
                  let int_120 : Bool =
                      (assume z_65.(0/1);
                       true) <>
                      (assume not z_65.(0/1);
                       false) in
                  (1 int_120)) in
         let x_121 : [Bool, Bool] =
             let int_122 : Bool =
                 (assume p1_59.(0/2).(0/2);
                  true) <>
                 (assume not p1_59.(0/2).(0/2) && not p1_59.(0/2).(1/2);
                  false) in
             let int_123 : Bool =
                 (assume int_122 && p1_59.(0/2).(0/2);
                  true) <>
                 (assume not int_122 && not p1_59.(0/2).(0/2) && not p1_59.(0/2).(1/2);
                  false) in
             (2 int_122 int_123) in
         let y_124 : [] -> [Bool] =
             fun (x_125 : []) ->
                 let y_126 : [] =
                     (0) in
                 let z_127 : [Bool] =
                     g_66 y_126 in
                 let int_128 : Bool =
                     (assume z_127.(0/1);
                      true) <>
                     (assume not z_127.(0/1);
                      false) in
                 (1 int_128) in
         (2 x_121 y_124));;
let rand_int_4 : [] -> [] =
    fun (x_68 : []) ->
        (0);;
let add_5 : [] -> [Bool] -> [Bool] =
    fun (x_73 : []) ->
        fun (y_74 : [Bool]) ->
            let int_129 : Bool =
                (assume y_74.(0/1);
                 true) <>
                (assume not y_74.(0/1);
                 false) in
            (1 int_129);;
let n_75 : [] =
    rand_int_4 (0) in
let m_76 : [] =
    rand_int_4 (0) in
let xs_77 : [[Bool, Bool], [] -> [Bool]] =
    make_list_3 (0) in
let r_78 : [Bool, Bool] =
    fold_left_2 (fun (x_130 : []) ->
                     let y_131 : [] =
                         (0) in
                     let z_132 : [Bool] -> [Bool] =
                         add_5 y_131 in
                     fun (x_133 : [Bool]) ->
                         let y_134 : [Bool] =
                             let int_135 : Bool =
                                 (assume x_133.(0/1);
                                  true) <>
                                 (assume not x_133.(0/1);
                                  false) in
                             (1 int_135) in
                         let z_136 : [Bool] =
                             z_132 y_134 in
                         let int_137 : Bool =
                             (assume z_136.(0/1);
                              true) <>
                             (assume not z_136.(0/1);
                              false) in
                         (1 int_137)) (0) (let x_138 : [] =
                                               (0) in
                                           let y_139 : [] -> [Bool] =
                                               fun (x_140 : []) ->
                                                   let y_141 : [] =
                                                       (0) in
                                                   let z_142 : [Bool] =
                                                       xs_77.(1/2) y_141 in
                                                   let int_143 : Bool =
                                                       (assume z_142.(0/1);
                                                        true) <>
                                                       (assume not z_142.(0/1);
                                                        false) in
                                                   (1 int_143) in
                                           (2 x_138 y_139)) in
assume (assume not r_78.(0/2) && not r_78.(1/2);
        true) <>
       (assume r_78.(1/2);
        false);
fail([])
