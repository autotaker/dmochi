let head_0 : [[Bool], [] -> []] -> [] =
    fun (p_12 : [[Bool], [] -> []]) ->
        (assume (assume not p_12.(0/2).(0/1);
                 true) <>
                false;
         fail([])) <>
        (assume (assume p_12.(0/2).(0/1);
                 true) <>
                (assume not p_12.(0/2).(0/1);
                 false);
         let f_13 : [] -> [] =
             p_12.(1/2) in
         let z_14 : [] =
             f_13 (0) in
         (0));;
let tail_1 : [[], [] -> []] -> [[Bool], [] -> []] =
    fun (p_21 : [[], [] -> []]) ->
        let f_23 : [] -> [] =
            p_21.(1/2) in
        let g_27 : [] -> [] =
            fun (j_25 : []) ->
                let v_26 : [] =
                    f_23 (0) in
                (0) in
        let x_108 : [Bool] =
            let int_109 : Bool =
                true in
            (1 int_109) in
        let y_110 : [] -> [] =
            fun (x_111 : []) ->
                let y_112 : [] =
                    (0) in
                let z_113 : [] =
                    g_27 y_112 in
                (0) in
        (2 x_108 y_110);;
let nil_2 : [] -> [[Bool], [] -> []] =
    fun (n_32 : []) ->
        let f_35 : [] -> [] =
            fun (j_34 : []) ->
                (0) in
        let x_114 : [Bool] =
            let int_115 : Bool =
                true in
            (1 int_115) in
        let y_116 : [] -> [] =
            fun (x_117 : []) ->
                let y_118 : [] =
                    (0) in
                let z_119 : [] =
                    f_35 y_118 in
                (0) in
        (2 x_114 y_116);;
let cons_3 : [] -> [[], [] -> []] -> [[Bool], [] -> []] =
    fun (x_43 : []) ->
        fun (p_44 : [[], [] -> []]) ->
            let f_46 : [] -> [] =
                p_44.(1/2) in
            let g_50 : [] -> [] =
                fun (j_48 : []) ->
                    (assume true <>
                            false;
                     (0)) <>
                    (assume true <>
                            false;
                     let z_49 : [] =
                         f_46 (0) in
                     (0)) in
            let x_120 : [Bool] =
                let int_121 : Bool =
                    true in
                (1 int_121) in
            let y_122 : [] -> [] =
                fun (x_123 : []) ->
                    let y_124 : [] =
                        (0) in
                    let z_125 : [] =
                        g_50 y_124 in
                    (0) in
            (2 x_120 y_122);;
let length_4 : [[], [] -> []] -> [Bool] =
    fun (p_55 : [[], [] -> []]) ->
        (assume true <>
                false;
         let int_126 : Bool =
             true in
         (1 int_126)) <>
        (assume true <>
                false;
         let p1_56 : [[Bool], [] -> []] =
             tail_1 (let x_127 : [] =
                         (0) in
                     let y_128 : [] -> [] =
                         fun (x_129 : []) ->
                             let y_130 : [] =
                                 (0) in
                             let z_131 : [] =
                                 p_55.(1/2) y_130 in
                             (0) in
                     (2 x_127 y_128)) in
         let r_57 : [Bool] =
             length_4 (let x_132 : [] =
                           (0) in
                       let y_133 : [] -> [] =
                           fun (x_134 : []) ->
                               let y_135 : [] =
                                   (0) in
                               let z_136 : [] =
                                   p1_56.(1/2) y_135 in
                               (0) in
                       (2 x_132 y_133)) in
         let int_137 : Bool =
             true <>
             (assume not (p1_56.(0/2).(0/1) && r_57.(0/1));
              false) in
         (1 int_137));;
let make_list_5 : [] -> [[Bool, Bool, Bool], [] -> []] =
    fun (n_64 : []) ->
        (assume true <>
                false;
         let p_65 : [[Bool], [] -> []] =
             nil_2 (0) in
         let x_138 : [Bool, Bool, Bool] =
             let int_139 : Bool =
                 true in
             let int_140 : Bool =
                 (assume int_139;
                  true) <>
                 (assume int_139 && not p_65.(0/2).(0/1);
                  false) in
             let int_141 : Bool =
                 (assume int_139 && int_140 && not p_65.(0/2).(0/1);
                  true) <>
                 (assume int_139;
                  false) in
             (3 int_139 int_140 int_141) in
         let y_142 : [] -> [] =
             fun (x_143 : []) ->
                 let y_144 : [] =
                     (0) in
                 let z_145 : [] =
                     p_65.(1/2) y_144 in
                 (0) in
         (2 x_138 y_142)) <>
        (assume true <>
                false;
         let p1_66 : [[Bool, Bool, Bool], [] -> []] =
             make_list_5 (0) in
         let f_68 : [] -> [] =
             p1_66.(1/2) in
         let g_72 : [] -> [] =
             fun (j_70 : []) ->
                 (assume true <>
                         false;
                  (0)) <>
                 (assume true <>
                         false;
                  let z_71 : [] =
                      f_68 (0) in
                  (0)) in
         let x_146 : [Bool, Bool, Bool] =
             let int_147 : Bool =
                 false in
             let int_148 : Bool =
                 (assume not int_147;
                  true) <>
                 (assume not int_147 && not p1_66.(0/2).(1/3) && not p1_66.(0/2).(2/3);
                  false) in
             let int_149 : Bool =
                 (assume not int_147 && int_148 && p1_66.(0/2).(1/3);
                  true) <>
                 (assume not int_147 && not p1_66.(0/2).(1/3) && not p1_66.(0/2).(2/3);
                  false) in
             (3 int_147 int_148 int_149) in
         let y_150 : [] -> [] =
             fun (x_151 : []) ->
                 let y_152 : [] =
                     (0) in
                 let z_153 : [] =
                     g_72 y_152 in
                 (0) in
         (2 x_146 y_150));;
let rand_int_6 : [] -> [] =
    fun (x_74 : []) ->
        (0);;
let reverse_7 : [[], [] -> []] -> [[Bool, Bool], [] -> [Bool]] -> [[Bool], [] -> []] =
    fun (acc_87 : [[], [] -> []]) ->
        fun (xs_88 : [[Bool, Bool], [] -> [Bool]]) ->
            (assume (assume not xs_88.(0/2).(0/2);
                     true) <>
                    false;
             let x_154 : [Bool] =
                 let int_155 : Bool =
                     (assume not xs_88.(0/2).(0/2) && xs_88.(0/2).(1/2);
                      true) <>
                     (assume not xs_88.(0/2).(0/2) && not xs_88.(0/2).(1/2);
                      false) in
                 (1 int_155) in
             let y_156 : [] -> [] =
                 fun (x_157 : []) ->
                     let y_158 : [] =
                         (0) in
                     let z_159 : [] =
                         acc_87.(1/2) y_158 in
                     (0) in
             (2 x_154 y_156)) <>
            (assume true <>
                    (assume not xs_88.(0/2).(0/2);
                     false);
             let f_90 : [] -> [Bool] =
                 xs_88.(1/2) in
             let x_91 : [Bool] =
                 f_90 (0) in
             let g_95 : [] -> [] =
                 fun (j_93 : []) ->
                     let v_94 : [Bool] =
                         f_90 (0) in
                     (0) in
             let f1_97 : [] -> [] =
                 acc_87.(1/2) in
             let g1_101 : [] -> [] =
                 fun (j_99 : []) ->
                     (assume true <>
                             false;
                      (0)) <>
                     (assume true <>
                             false;
                      let z_100 : [] =
                          f1_97 (0) in
                      (0)) in
             let r_102 : [[Bool], [] -> []] =
                 reverse_7 (let x_160 : [] =
                                (0) in
                            let y_161 : [] -> [] =
                                fun (x_162 : []) ->
                                    let y_163 : [] =
                                        (0) in
                                    let z_164 : [] =
                                        g1_101 y_163 in
                                    (0) in
                            (2 x_160 y_161)) (let x_165 : [Bool, Bool] =
                                                  let int_166 : Bool =
                                                      (assume xs_88.(0/2).(0/2);
                                                       true) <>
                                                      false in
                                                  let int_167 : Bool =
                                                      (assume x_91.(0/1);
                                                       true) <>
                                                      (assume not x_91.(0/1) && not xs_88.(0/2).(1/2);
                                                       false) in
                                                  (2 int_166 int_167) in
                                              let y_168 : [] -> [Bool] =
                                                  fun (x_169 : []) ->
                                                      let y_170 : [] =
                                                          (0) in
                                                      let z_171 : [] =
                                                          g_95 y_170 in
                                                      let int_172 : Bool =
                                                          true <>
                                                          (assume not x_165.(1/2) && not x_91.(0/1) && not xs_88.(0/2).(1/2);
                                                           false) in
                                                      (1 int_172) in
                                              (2 x_165 y_168)) in
             let x_173 : [Bool] =
                 let int_174 : Bool =
                     (assume r_102.(0/2).(0/1);
                      true) <>
                     (assume not r_102.(0/2).(0/1);
                      false) in
                 (1 int_174) in
             let y_175 : [] -> [] =
                 r_102.(1/2) in
             (2 x_173 y_175));;
let len_103 : [] =
    rand_int_6 (0) in
let xs_104 : [[Bool, Bool, Bool], [] -> []] =
    make_list_5 (0) in
assume (assume not xs_104.(0/2).(0/3);
        true) <>
       (assume xs_104.(0/2).(0/3);
        false);
let acc_105 : [[Bool], [] -> []] =
    nil_2 (0) in
let xs1_106 : [[Bool], [] -> []] =
    reverse_7 (let x_176 : [] =
                   (0) in
               let y_177 : [] -> [] =
                   fun (x_178 : []) ->
                       let y_179 : [] =
                           (0) in
                       let z_180 : [] =
                           acc_105.(1/2) y_179 in
                       (0) in
               (2 x_176 y_177)) (let x_181 : [Bool, Bool] =
                                     let int_182 : Bool =
                                         (assume not xs_104.(0/2).(0/3) && xs_104.(0/2).(1/3) && xs_104.(0/2).(2/3);
                                          true) <>
                                         (assume not xs_104.(0/2).(0/3) && not xs_104.(0/2).(2/3);
                                          false) in
                                     let int_183 : Bool =
                                         (assume not acc_105.(0/2).(0/1) && not xs_104.(0/2).(0/3);
                                          true) <>
                                         (assume not xs_104.(0/2).(0/3);
                                          false) in
                                     (2 int_182 int_183) in
                                 let y_184 : [] -> [Bool] =
                                     fun (x_185 : []) ->
                                         let y_186 : [] =
                                             (0) in
                                         let z_187 : [] =
                                             xs_104.(1/2) y_186 in
                                         let int_188 : Bool =
                                             (assume not xs_104.(0/2).(0/3) && not (acc_105.(0/2).(0/1) && x_181.(1/2));
                                              true) <>
                                             (assume not acc_105.(0/2).(0/1) && not x_181.(1/2) && not xs_104.(0/2).(0/3);
                                              false) in
                                         (1 int_188) in
                                 (2 x_181 y_184)) in
let x_107 : [] =
    head_0 (let x_189 : [Bool] =
                let int_190 : Bool =
                    (assume xs1_106.(0/2).(0/1) && not xs_104.(0/2).(0/3);
                     true) <>
                    (assume not xs1_106.(0/2).(0/1) && not xs_104.(0/2).(0/3);
                     false) in
                (1 int_190) in
            let y_191 : [] -> [] =
                fun (x_192 : []) ->
                    let y_193 : [] =
                        (0) in
                    let z_194 : [] =
                        xs1_106.(1/2) y_193 in
                    (0) in
            (2 x_189 y_191)) in
(0)
